{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "84b37cfe-9818-4922-b8fb-75bbca54abb6",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "unterminated string literal (detected at line 21) (4158013545.py, line 21)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[1], line 21\u001b[1;36m\u001b[0m\n\u001b[1;33m    print(\"\\nData with 'Profit_Per_Unit'\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m unterminated string literal (detected at line 21)\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the data\n",
    "file_path = \"sales_data.csv\"  # Ensure the file is in the same directory or provide the full path\n",
    "sales_data = pd.read_csv(file_path)\n",
    "\n",
    "# Data Filtering\n",
    "# Extract all rows where sales are greater than 1000\n",
    "sales_greater_than_1000 = sales_data[sales_data[\"Sales\"] > 1000]\n",
    "print(\"Rows where sales are greater than 1000:\")\n",
    "print(sales_greater_than_1000)\n",
    "\n",
    "# Find all sales records for a specific region (e.g., \"East\")\n",
    "region_sales = sales_data[sales_data[\"Region\"] == \"East\"]\n",
    "print(\"\\nSales records for the 'East' region:\")\n",
    "print(region_sales)\n",
    "\n",
    "# Data Processing\n",
    "# Add a new column, Profit_Per_Unit, calculated as Profit / Quantity\n",
    "sales_data[\"Profit_Per_Unit\"] = sales_data[\"Profit\"] / sales_data[\"Quantity\"]\n",
    "print(\"\\nData with 'Profit_Per_Unit'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c60bf6f4-c70d-457d-a14f-a5ab11fab501",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
